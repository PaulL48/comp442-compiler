<START> ::= <Prog>
<Prog> ::= @makenode~list~classDeclList@ <ClassDecl> @makenode~list~funcDefList@ <FuncDef> 'main' <FuncBody> @makefamily~3~prog@

<AParams> ::= <Expr> @makesibling@ <AParamsTail>
<AParams> ::= @makenode~epsilon~AParamEp@ EPSILON

<AParamsTail> ::= ',' <Expr> @makesibling@ <AParamsTail>
<AParamsTail> ::= EPSILON

<AddOp> ::= '+' @makenode~string~+@
<AddOp> ::= '-' @makenode~string~-@
<AddOp> ::= 'or' @makenode~string~or@

<ArithExpr> ::= <Term> <ArithExprTail>

<ArithExprTail> ::= <AddOp> <Term> @makefamily~3~addOp@ <ArithExprTail>
<ArithExprTail> ::= EPSILON


<ArraySizeRept> ::= '[' <IntNum> ']' <ArraySizeRept>
<ArraySizeRept> ::= EPSILON

<AssignOp> ::= 'assign'

<AssignStatTail> ::= <AssignOp> <Expr> @makefamily~2~assignOp@

<ClassDecl> ::= 'class' 'id' @makenode~string~id@ <Inherit> '{' @makenode~list~membList@ <ClassDeclBody> '}' @makefamily~3~classDecl@ @makesibling@ ';' <ClassDecl>
<ClassDecl> ::= EPSILON

<ClassDeclBody> ::= <Visibility> <MemberDecl> @makefamily~2~classDeclBody@ @makesibling@ <ClassDeclBody>
<ClassDeclBody> ::= EPSILON

<ClassMethod> ::= 'sr' 'id' @makenode~string~scopeSpec@
<ClassMethod> ::= EPSILON @makenode~epsilon~scopeSpec@

<Expr> ::= <ArithExpr> <ExprTail>

<ExprTail> ::= <RelOp> <ArithExpr> @makefamily~3~relOp@
<ExprTail> ::= EPSILON

<FParams> ::= <Type> 'id' @makenode~string~id@ @makenode~list~dimlist@ <ArraySizeRept> @makefamily~3~fparam@ @makesibling@ <FParamsTail>
<FParams> ::= EPSILON

<FParamsTail> ::= ',' <Type> 'id' @makenode~string~id@ @makenode~list~dimlist@ <ArraySizeRept> @makefamily~3~fparam@ @makesibling@ <FParamsTail>
<FParamsTail> ::= EPSILON

<Factor> ::= <FuncOrVar>
<Factor> ::= 'intnum' @makenode~integer~factor@
<Factor> ::= 'floatnum' @makenode~float~factor@
<Factor> ::= 'stringlit' @makenode~string~factor@
<Factor> ::= '(' <Expr> ')'
<Factor> ::= 'not' <Factor> @makefamily~1~not@
<Factor> ::= <Sign> <Factor> @makefamily~2~sign@
<Factor> ::= 'qm' '[' <Expr> ':' <Expr> ':' <Expr> ']' @makefamily~3~ternary@

<FuncBody> ::= '{' <MethodBodyVar> @makenode~list~statBlock@ <StatementList> '}' @makefamily~2~funcBody@

<FuncDecl> ::= 'func' 'id' @makenode~string~id@ '(' @makenode~list~fparamList@ <FParams> ')' ':' <FuncDeclTail> @makefamily~3~funcDecl@ ';'

<FuncDeclTail> ::= <Type>
<FuncDeclTail> ::= 'void' @makenode~epsilon~type@

<FuncDef> ::= <Function> @makesibling@ <FuncDef>
<FuncDef> ::= EPSILON

<FuncHead> ::= 'func' 'id' @makenode~string~id@ <ClassMethod> '(' @makenode~list~fparamList@ <FParams> ')' ':' <FuncDeclTail>

<FuncOrAssignStat> ::= 'id' @makenode~string~id@ <FuncOrAssignStatIdnest>

<FuncOrAssignStatIdnest> ::= @makenode~list~indexList@ <IndiceRep> @makefamily~2~dataMember@ <FuncOrAssignStatIdnestVarTail>
<FuncOrAssignStatIdnest> ::= '(' @makenode~list~aParams@ <AParams> ')' @makefamily~2~fCall@ <FuncOrAssignStatIdnestFuncTail>

<FuncOrAssignStatIdnestFuncTail> ::= '.' 'id' @makenode~string~id@ <FuncStatTail>
<FuncOrAssignStatIdnestFuncTail> ::= EPSILON

<FuncStatTail> ::= @makenode~list~indexList@ <IndiceRep> @makefamily~2~dataMember@ '.' 'id' @makenode~string~id@ <FuncStatTail>
<FuncStatTail> ::= '(' @makenode~list~aParams@ <AParams> ')' @makefamily~2~fCall@ <FuncStatTailIdnest>

<FuncStatTailIdnest> ::= '.' 'id' @makenode~string~id@ <FuncStatTail>
<FuncStatTailIdnest> ::= EPSILON

<FuncOrAssignStatIdnestVarTail> ::= '.' 'id' @makenode~string~id@ <FuncOrAssignStatIdnest>
<FuncOrAssignStatIdnestVarTail> ::= <AssignStatTail>

<FuncOrVar> ::= 'id' @makenode~string~id@ <FuncOrVarIdnest>

<FuncOrVarIdnest> ::= @makenode~list~indexList@ <IndiceRep> @makefamily~2~dataMember@ <FuncOrVarIdnestTail>
<FuncOrVarIdnest> ::= '(' @makenode~list~aParams@ <AParams> ')' @makefamily~2~fCall@ <FuncOrVarIdnestTail>

<FuncOrVarIdnestTail> ::= '.' 'id' @makenode~string~id@ <FuncOrVarIdnest>
<FuncOrVarIdnestTail> ::= EPSILON

<Function> ::= <FuncHead> <FuncBody> @makefamily~5~funcDef@

<IndiceRep> ::= '[' <Expr> @makesibling@ ']' <IndiceRep>
<IndiceRep> ::= EPSILON

<Inherit> ::= 'inherits' 'id' @makenode~string~id@ <NestedId>
<Inherit> ::= @makenode~epsilon~inherList@ EPSILON

<IntNum> ::= 'intnum' @makenode~integer~num@ @makesibling@
<IntNum> ::= EPSILON

<MemberDecl> ::= <FuncDecl>
<MemberDecl> ::= <VarDecl>

<MethodBodyVar> ::= 'var' '{' @makenode~list~varList@ <VarDeclRep> '}'
<MethodBodyVar> ::= EPSILON @makenode~epsilon~varList@

<MultOp> ::= '*' @makenode~string~*@
<MultOp> ::= '/' @makenode~string~/@
<MultOp> ::= 'and' @makenode~string~and@

<NestedId> ::= ',' 'id' @makenode~string~id@ <NestedId>
<NestedId> ::= EPSILON


<RelOp> ::= 'eq' @makenode~string~releq@
<RelOp> ::= 'neq' @makenode~string~relneq@
<RelOp> ::= 'lt' @makenode~string~lt@
<RelOp> ::= 'gt' @makenode~string~gt@
<RelOp> ::= 'leq' @makenode~string~leq@
<RelOp> ::= 'geq' @makenode~string~geq@


<Sign> ::= '+' @makenode~string~pos@
<Sign> ::= '-' @makenode~string~neg@

<StatBlock> ::= '{' @makenode~list~statBlock@ <StatementList> '}'
<StatBlock> ::= @makenode~list~statBlock@ <Statement>
<StatBlock> ::= @makenode~epsilon~statBlock@ EPSILON

<Statement> ::= <FuncOrAssignStat> ';'
<Statement> ::= 'if' '(' <Expr> ')' 'then' <StatBlock> 'else' <StatBlock> @makefamily~3~ifStat@ ';'
<Statement> ::= 'while' '(' <Expr> ')' <StatBlock> @makefamily~2~whileStat@ ';'
<Statement> ::= 'read' '(' <Variable> @makefamily~1~readStat@ ')' ';'
<Statement> ::= 'write' '(' <Expr> @makefamily~1~writeStat@ ')' ';'
<Statement> ::= 'return' '(' <Expr> @makefamily~1~returnStat@ ')' ';'
<Statement> ::= 'break' @makenode~string~break@ @makefamily~1~breakStat@ ';'
<Statement> ::= 'continue' @makenode~string~continue@ @makefamily~1~continueStat@ ';'

<StatementList> ::= <Statement> @makesibling@ <StatementList>
<StatementList> ::= EPSILON

<Term> ::= <Factor> <TermTail>

<TermTail> ::= <MultOp> <Factor> @makefamily~3~mulOp@ <TermTail>
<TermTail> ::= EPSILON

<Type> ::= 'integer' @makenode~string~type@
<Type> ::= 'float' @makenode~string~type@
<Type> ::= 'string' @makenode~string~type@
<Type> ::= 'id' @makenode~string~type@

<VarDecl> ::= <Type> 'id' @makenode~string~id@ @makenode~list~dimlist@ <ArraySizeRept> ';' @makefamily~3~varDecl@

<VarDeclRep> ::= <VarDecl> @makesibling@ <VarDeclRep>
<VarDeclRep> ::= EPSILON

<Variable> ::= 'id' @makenode~string~id@ <VariableIdnest>

<VariableIdnest> ::= @makenode~list~indexList@ <IndiceRep> @makefamily~2~dataMember@ <VariableIdnestTail>

<VariableIdnestTail> ::= '.' 'id' @makenode~string~id@ <VariableIdnest>
<VariableIdnestTail> ::= EPSILON

<Visibility> ::= 'public' @makenode~string~visibility@
<Visibility> ::= 'private' @makenode~string~visibility@
<Visibility> ::= EPSILON @makenode~epsilon~visibility@

